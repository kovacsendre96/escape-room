{"version":3,"sources":["GlobalHelpers/Lang/Lang.js","Components/Header/NavMenu/Nav.js","GlobalHelpers/Api/Api.js","Components/Pages/BookingPage/BookingFromFunctions.js","GlobalHelpers/GlobalFunctions.js","Components/Pages/BookingPage/BookingForm.js","GlobalHelpers/Api/ApiFunctions.js","Components/Pages/BookingPage/BookingModal.js","Components/Pages/BookingPage/CustomTableCell.js","Components/Pages/BookingPage/BookingTable.js","Components/Pages/BookingPage/BookingPage.js","Components/Pages/MainPage/MainPage.js","Components/Pages/NotFound/NotFound.js","Components/Pages/RoomsPage/RoomsPage.js","App.js","index.js"],"names":["translate","monday","tuesday","wednesday","thursday","friday","saturday","sunday","week","mainPage","rooms","booking","contact","fogsagban","name","email","phone","message","groupNumber","nameIsRequired","invalidEmail","invalidPhone","numberOfGroupIsRequired","useStyles","makeStyles","navWrapper","background","color","height","padding","margin","linkItem","cursor","textDecoration","Nav","classes","Grid","className","container","justifyContent","alignItems","item","to","api","axios","create","baseURL","clickedTimeData","Object","INPUT_TYPE","theme","form","display","flexDirection","width","input","formControl","spacing","minWidth","selectLabel","paddingLeft","button","BookingForm","handleClose","ctx","useContext","BookingContext","useState","setGroupNumber","group_number","errors","setErrors","setName","setEmail","setPhone","setMessage","handleBlur","e","changeType","setFunction","targetValue","target","value","match","isInvalidForm","autoComplete","onSubmit","preventDefault","id","roomId","weekNumber","dayNumber","timeNumber","time","reserved","setIsSentBook","isSentBook","put","then","res","status","bookRoom","clickedDay","clickedTime","date","room","post","sendReservationsData","TextField","label","type","variant","helperText","required","inputProps","maxLength","error","Boolean","onBlur","FormControl","InputLabel","Select","labelId","onChange","event","menuItem","i","push","MenuItem","generateMenuItem","FormHelperText","fullWidth","multiline","rows","Button","disabled","modal","paper","backgroundColor","palette","border","boxShadow","shadows","BookingModal","openModal","setOpenModal","response","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","tableCell","free","CustomTableCell","index","rowIndex","TableCell","onClick","dayTimes","table","maxWidth","BookingTable","rowsArray","columns","days","map","data","dayName","day_name","times","createRow","TableRow","tableRow","day","drawRows","useEffect","TableContainer","Table","TableHead","column","Typography","TableBody","row","createContext","weekWrapper","ArrowIcon","fontSize","BookingPage","setResponse","loading","setLoading","setRoomId","todaysWeekNumber","today","Date","firstDayOfYear","getFullYear","pastDaysOfYear","valueOf","Math","ceil","getDay","getCurrentWeekNumber","setWeekNumber","room_name","useParams","seRoomIdByRoomName","fetchedResult","get","key","unshift","getRoomData","roomName","handleArrowClick","prevNumber","nextNumber","direction","Provider","MainPage","NotFound","RoomsPage","App","Fragment","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5dc79877.chunk.js","sourcesContent":["\r\n\r\n    const lang = \"hu\";\r\nexport const translate =  {\r\n            monday:lang === \"hu\"? \"Hétfő\":\"Monday\",\r\n            tuesday:lang === \"hu\"? \"Kedd\":\"Tuesday\",\r\n            wednesday:lang === \"hu\"? \"Szerda\":\"Wednesday\",\r\n            thursday:lang === \"hu\"? \"Csütrötök\":\"Thursday\",  \r\n            friday:lang === \"hu\"? \"Péntek\":\"Friday\",\r\n            saturday:lang === \"hu\"? \"Szombat\":\"Saturday\",\r\n            sunday:lang === \"hu\"? \"Vasárnap\":\"Sunday\",\r\n            week:lang === \"hu\"? \"Hét\":\"Week\",\r\n            mainPage: lang === \"hu\"? \"Főoldal\" : \"Main page\",\r\n            rooms : lang === \"hu\"? \"Szobák\" : \"Rooms\",\r\n            booking : lang === \"hu\"? \"Foglalás\" : \"Booking\",\r\n            contact : lang === \"hu\"? \"Kapcsolat\": \"Contact\",\r\n            fogsagban: lang === \"hu\"? \"Fogságban\" : \"Captivity\",\r\n            \"szoba-2\": lang === \"hu\"? \"Szoba 2\" : \"Room 2\",\r\n            \"szoba-3\": lang === \"hu\"? \"Szoba 3\" : \"Room 3\",\r\n            name: lang === \"hu\"? \"Teljes név\" : \"Full name\",\r\n            email: lang === \"hu\"? \"Email cím\" : \"Email\",\r\n            phone: lang === \"hu\"? \"Telefonszám\" : \"Phone number\",\r\n            message: lang === \"hu\"? \"Megjegyzés\" : \"Message\",\r\n            groupNumber: lang === \"hu\"? \"Létszám\" : \"Group number\",\r\n            nameIsRequired: lang === \"hu\"? \"Név kitöltése kötelező\" : \"Name is required\",\r\n            invalidEmail: lang === \"hu\"? \"Hibás e-mail\" : \"Invalid  email\",\r\n            invalidPhone: lang === \"hu\"? \"Hibás telefonszám\" : \"Wrong phone number\",\r\n            numberOfGroupIsRequired: lang === \"hu\"? \"Létszám megadása kötelező\" : \"Number of group is required\",\r\n\r\n}\r\n","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { translate } from '../../../GlobalHelpers/Lang/Lang';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    navWrapper: {\r\n        background: 'black',\r\n        color: 'white',\r\n        height: 60,\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    linkItem: {\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n        textDecoration:'none'\r\n    }\r\n\r\n});\r\n\r\nconst Nav = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid className={classes.navWrapper} container justifyContent={\"space-around\"} alignItems={\"center\"}>\r\n            <Grid  item><Link className={classes.linkItem} to=\"/\">{translate.mainPage}</Link></Grid>\r\n            <Grid  item><Link className={classes.linkItem} to=\"/szobak\">{translate.rooms}</Link></Grid>\r\n            <Grid  item> <Link className={classes.linkItem} to=\"/foglalas\"> {translate.booking} </Link> </Grid>\r\n            <Grid  item> <Link className={classes.linkItem} to=\"/kapcsolat\"> {translate.contact} </Link> </Grid>\r\n        </Grid>\r\n\r\n    );\r\n};\r\n\r\nexport default Nav;","import axios from 'axios';\r\n\r\n const  api = axios.create(\r\n    {\r\n      baseURL: \"https://booking-database-aa483-default-rtdb.europe-west1.firebasedatabase.app/\",\r\n    }\r\n  );\r\n  export default api;","import React, { useState } from \"react\";\r\n\r\nexport let clickedTimeData = Object;","import { translate } from \"./Lang/Lang\";\r\n\r\nexport const readRoomName = (roomName) => {\r\n\r\n    return translate[roomName];\r\n\r\n};\r\n\r\nexport const seRoomIdByRoomName = (room_name) => {\r\n    let roomId;\r\n    switch (room_name) {\r\n        case 'fogsagban': roomId = '-Mp1W6hGMvV79dDM-K8U';\r\n            break;\r\n        case 'szoba-2': roomId = '-Mp1WBHtwPG0NRkGTONd';\r\n            break;\r\n        case 'szoba-3': roomId = '-Mp1WF1YL7dOnZUkm24h';\r\n            break;\r\n    }\r\n    return (\r\n        roomId\r\n    );\r\n};\r\n\r\nexport const isReservedTime = (time) => {\r\n    return time;\r\n};\r\n\r\nexport const INPUT_TYPE = {\r\n    NAME: \"name\",\r\n    EMAIL: \"email\",\r\n    PHONE: \"phone\",\r\n    MESSAGE: \"message\",\r\n    GROUP_NUMBER: \"group_number\"\r\n};\r\n\r\nexport const getCurrentWeekNumber = () => {\r\n    const today = new Date();\r\n    const firstDayOfYear = new Date(today.getFullYear(), 0, 1);\r\n    const pastDaysOfYear = (today.valueOf() - firstDayOfYear.valueOf()) / 86400000;\r\n    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7) -2;\r\n};\r\n","import { Button, FormHelperText, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { translate } from \"../../../GlobalHelpers/Lang/Lang\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { BookingContext } from \"./BookingPage\";\r\nimport { bookRoom, sendReservationsData } from \"../../../GlobalHelpers/Api/ApiFunctions\";\r\nimport { clickedTimeData } from \"./BookingFromFunctions\";\r\nimport { INPUT_TYPE } from \"../../../GlobalHelpers/GlobalFunctions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 500,\r\n\r\n    },\r\n    input: {\r\n        margin: 5,\r\n\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectLabel: {\r\n        paddingLeft: 10\r\n    },\r\n    message: {\r\n        '& .MuiInputBase-formControl': {\r\n            height: 150,\r\n            display: 'flex',\r\n            alignItems: 'flex-start',\r\n        }\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst BookingForm = ({ handleClose }) => {\r\n    const classes = useStyles();\r\n    const ctx = useContext(BookingContext);\r\n    const [groupNumber, setGroupNumber] = useState('');\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        group_number: ''\r\n    });\r\n    const [name, setName] = useState(null);\r\n    const [email, setEmail] = useState(null);\r\n    const [phone, setPhone] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const handleBlur = (e, changeType, setFunction) => {    \r\n        const targetValue = e.target.value;\r\n        setFunction(targetValue);\r\n\r\n        if (changeType === INPUT_TYPE.NAME && targetValue === \"\") {\r\n            setErrors({\r\n                ...errors,\r\n                [changeType]: translate.nameIsRequired\r\n            })\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                [changeType]: ''\r\n            })\r\n        }\r\n        if (changeType === INPUT_TYPE.EMAIL) {\r\n            const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            if (targetValue.match(mailformat)) {\r\n\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: ''\r\n                })\r\n            } else {\r\n\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: translate.invalidEmail\r\n                })\r\n            }\r\n        }\r\n        if (changeType === INPUT_TYPE.PHONE) {\r\n            const phoneFormat = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im\r\n            if (targetValue.match(phoneFormat)) {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: ''\r\n                })\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: translate.invalidPhone\r\n                })\r\n            }\r\n        }\r\n\r\n        if (changeType === INPUT_TYPE.GROUP_NUMBER) {\r\n            if (targetValue === '') {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: translate.numberOfGroupIsRequired\r\n                })\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: ''\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectChange = (event) => {\r\n        setGroupNumber(event.target.value);\r\n    };\r\n\r\n    const generateMenuItem = () => {\r\n        const menuItem = [];\r\n        for (let i = 1; i < 6; i++) {\r\n            menuItem.push(\r\n                <MenuItem key={i} value={i}>{i}</MenuItem>\r\n            );\r\n        }\r\n        return menuItem;\r\n    };\r\n\r\n    const isInvalidForm = () => {\r\n        return errors.name !== \"\" || errors.email !== \"\" || errors.phone !== \"\" || errors.group_number !== \"\";\r\n    };\r\n\r\n\r\n\r\n    const submitBook = (e) => {\r\n        if (!isInvalidForm()) {\r\n            e.preventDefault();\r\n            const sendData = {\r\n                id: ctx.id,\r\n                roomId: ctx.roomId,\r\n                weekNumber: ctx.weekNumber,\r\n                dayNumber: clickedTimeData.clickedDay,\r\n                timeNumber: clickedTimeData.clickedTime,\r\n                time: clickedTimeData.time,\r\n                reserved: true,\r\n                setIsSentBook: ctx.setIsSentBook,\r\n                isSentBook: ctx.isSentBook\r\n            }\r\n            bookRoom(sendData);\r\n            sendReservationsData({\r\n                name: name,\r\n                email: email,\r\n                phone: phone,\r\n                message: message,\r\n                groupNumber: groupNumber,\r\n                date: clickedTimeData.date,\r\n                time: clickedTimeData.time,\r\n                room: clickedTimeData.roomId,\r\n                id: ctx.id\r\n            })\r\n            handleClose();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form autoComplete=\"off\" className={classes.form} onSubmit={submitBook}>\r\n            <TextField\r\n                id=\"name\"\r\n                key=\"name\"\r\n                label={translate.name}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                helperText={errors?.name}\r\n                required\r\n                inputProps={\r\n                    { maxLength: 255 }\r\n                }\r\n                error={Boolean(errors?.name)}\r\n                onBlur={(e) => handleBlur(e, INPUT_TYPE.NAME, setName,)}\r\n            />\r\n            <TextField\r\n                id=\"email\"\r\n                key=\"email\"\r\n                label={translate.email}\r\n                type=\"email\"\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                autoComplete=\"new-email\"\r\n                required\r\n                error={errors?.email !== ''}\r\n                helperText={errors?.email}\r\n                onBlur={(e) => handleBlur(e, INPUT_TYPE.EMAIL, setEmail,)}\r\n            />\r\n            <TextField\r\n                id=\"phone\"\r\n                key=\"phone\"\r\n                label={translate.phone}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                autoComplete=\"new-phone\"\r\n                required\r\n                error={errors?.phone !== ''}\r\n                helperText={errors?.phone}\r\n                onBlur={(e) => handleBlur(e, INPUT_TYPE.PHONE, setPhone,)}\r\n            />\r\n            <FormControl required variant=\"outlined\" className={classes.formControl} key=\"form-control\" error={errors?.group_number !== ''}>\r\n                <InputLabel id=\"group-number\" key=\"group-number\">{translate.groupNumber}</InputLabel>\r\n                <Select\r\n                    labelId=\"group-number\"\r\n                    label={translate.groupNumber}\r\n                    id=\"group-number-select\"\r\n                    key=\"group-number-select\"\r\n                    value={groupNumber}\r\n                    onChange={handleSelectChange}\r\n                    onBlur={(e) => handleBlur(e, INPUT_TYPE.GROUP_NUMBER, setGroupNumber,)}\r\n\r\n                >\r\n                    {generateMenuItem()}\r\n\r\n                </Select>\r\n                <FormHelperText>{errors?.group_number} </FormHelperText>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl fullWidth variant=\"outlined\"  className={classes.input}>\r\n                <TextField\r\n                    id=\"message\"\r\n                    key=\"message\"\r\n                    label={translate.message}\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    className={`${classes.input} ${classes.message}`}\r\n                    autoComplete=\"new-message\"\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    multiline\r\n                    rows={5}\r\n                />\r\n            </FormControl>\r\n\r\n            <Button disabled={isInvalidForm()} key={\"button\"} type={\"submit\"} variant=\"contained\" color=\"primary\" className={`${classes.button} ${classes.input}`}>\r\n                {translate.booking}\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default BookingForm;\r\n","import api from \"./Api\";\r\n\r\nexport const getRoomData = ({ id, setResponse, setLoading, roomId, weekNumber }) => {\r\n    const fetchedResult = [];\r\n    const response = api.get(`/users/${id}/rooms/${roomId}/weeks/${weekNumber}.json`).then((res) => {\r\n        for (let key in res.data) {\r\n            fetchedResult.unshift({\r\n                ...res.data[key],\r\n                id: key\r\n            });\r\n        }\r\n        setResponse(res.data);\r\n        setLoading(false);\r\n    })\r\n    return response;\r\n}\r\n\r\n\r\nexport const bookRoom = ({ id, roomId, weekNumber, dayNumber, timeNumber, time, reserved, setIsSentBook, isSentBook }) => {\r\n    api.put(`/users/${id}/rooms/${roomId}/weeks/${weekNumber}/days/${dayNumber}/times/${timeNumber}.json`, { time: time, reserved: reserved }).then((res) => {\r\n        if (res.status === 200) {\r\n            setIsSentBook(!isSentBook);\r\n        }\r\n    }\r\n    )\r\n}\r\n\r\nexport const sendReservationsData = ({ name, phone, email, message, groupNumber, date, time, room, id }) => {\r\n    api.post(`/users/${id}/reservations/.json`, { \"Név\": name, \"Telefonszám\": phone, \"Email\": email, \"Megjegyzés\": message, \"Létszám:\": groupNumber, \"Dátum\": date, \"Óra\": time, \"Szoba\": room }).then((res) => {}\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport BookingForm from './BookingForm';\r\nimport { Grid } from '@material-ui/core';\r\nimport { clickedTimeData } from './BookingFromFunctions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n const  BookingModal = ({openModal,setOpenModal,response})=> {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n\r\n  return (\r\n \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={openModal}>\r\n          <div className={classes.paper}>\r\n        <Grid container justifyContent='center' alignItems='center'>{clickedTimeData.date}</Grid>\r\n          <BookingForm \r\n          handleClose={handleClose}\r\n          />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n  );\r\n}\r\nexport default BookingModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { isReservedTime } from '../../../GlobalHelpers/GlobalFunctions';\r\nimport { clickedTimeData } from './BookingFromFunctions';\r\nimport { CodeSharp } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles({\r\n    tableCell: {\r\n        border: '2px solid white',\r\n        padding: 20\r\n    },\r\n    reserved: {\r\n        cursor: \"not-allowed\",\r\n        background: 'red'\r\n    },\r\n    free: {\r\n        cursor: 'pointer',\r\n        background: '#90EE90'\r\n    },\r\n});\r\n\r\nconst CustomTableCell = ({ response,index,setOpenModal,rowIndex,roomId }) => {\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        if (!isReservedTime(response.dayTimes[index].reserved)){\r\n            setOpenModal(true);\r\n            clickedTimeData.clickedDay = rowIndex;\r\n            clickedTimeData.clickedTime = index;\r\n            clickedTimeData.time = response.dayTimes[index].time;\r\n            clickedTimeData.date = response.date;\r\n            clickedTimeData.roomId = roomId;\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n            <TableCell\r\n                onClick={handleClick}\r\n                key={`table-body-cell-${response.date}`}\r\n                className={`${classes.tableCell} ${response.dayTimes[index].reserved ? classes.reserved : classes.free}`}\r\n            >\r\n                {response.dayTimes[index].time}\r\n            </TableCell>\r\n    \r\n    );\r\n}\r\n\r\nexport default CustomTableCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { translate } from '../../../GlobalHelpers/Lang/Lang';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport BookingModal from './BookingModal';\r\nimport CustomTableCell from './CustomTableCell';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        maxWidth: 700,\r\n    }\r\n});\r\nconst BookingTable = ({ response,roomId }) => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const classes = useStyles();\r\n    const rowsArray = [];\r\n    const columns = [\r\n        translate.monday,\r\n        translate.tuesday,\r\n        translate.wednesday,\r\n        translate.thursday,\r\n        translate.friday,\r\n        translate.saturday,\r\n        translate.sunday\r\n    ];\r\n\r\n\r\n\r\n    function createData(date, dayName, dayTimes) {\r\n        return { date, dayName, dayTimes };\r\n    }\r\n\r\n    const rows = response.days.map(data =>\r\n        createData(\r\n            data.date,\r\n            data.day_name,\r\n            data.times.map(time => time)\r\n        )\r\n    )\r\n\r\n    const createRow = (index) => {\r\n        return (\r\n            <TableRow key={index} className={classes.tableRow}>\r\n                {\r\n                    rows.map((day,rowIndex) => (\r\n                        <CustomTableCell\r\n                            response={day}\r\n                            index={index}\r\n                            setOpenModal={setOpenModal}\r\n                            rowIndex={rowIndex}\r\n                            key={rowIndex}\r\n                            roomId={roomId}\r\n                        />\r\n                    ))}\r\n            </TableRow>\r\n        );\r\n    }\r\n\r\n    const drawRows = () => {\r\n        for (let i = 0; i < 6; i++) {\r\n            rowsArray.push(createRow(i))\r\n        }\r\n    }\r\n    drawRows();\r\n    useEffect(() => {\r\n    }, [response])\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <BookingModal\r\n                    openModal={openModal}\r\n                    setOpenModal={setOpenModal}\r\n                    response={response}\r\n                />\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {columns.map((column, index) => (\r\n                            <TableCell key={`table-head-${index}`}>\r\n                                <Grid key={`table-head-cell${index}`}>{column}</Grid>\r\n                                <Typography key={`table-head-date${index}`} variant={\"caption\"}>{response.days[index].date}</Typography>\r\n                            </TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rowsArray.map(row => row)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default BookingTable;","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { getRoomData } from \"../../../GlobalHelpers/Api/ApiFunctions\";\r\nimport BookingTable from \"./BookingTable\";\r\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { translate } from \"../../../GlobalHelpers/Lang/Lang\";\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport { useParams } from \"react-router\";\r\nimport { getCurrentWeekNumber, readRoomName, seRoomIdByRoomName } from \"../../../GlobalHelpers/GlobalFunctions\";\r\n\r\n\r\n\r\n\r\nexport const BookingContext = createContext();\r\nconst useStyles = makeStyles({\r\n    weekWrapper: {\r\n        width: 'auto',\r\n        padding: 20,\r\n    },\r\n    ArrowIcon: {\r\n        cursor: 'pointer',\r\n        padding: 10,\r\n        fontSize: 50,\r\n    }\r\n});\r\nconst BookingPage = () => {\r\n    /*============================ USE STATES /*============================*/\r\n    const [response, setResponse] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [roomId, setRoomId] = useState(null);\r\n    const [isSentBook, setIsSentBook] = useState(false);\r\n    const todaysWeekNumber = getCurrentWeekNumber();\r\n    const maxWeekNumber = 51;\r\n    const [weekNumber, setWeekNumber] = useState(null);\r\n    const classes = useStyles();\r\n    const { room_name } = useParams();\r\n    const id = '-MoUTkg1gdkGpPFivBxy';\r\n    /*============================ USE EFFECTS /*============================*/\r\n    useEffect(() => {\r\n        setWeekNumber(todaysWeekNumber);\r\n        setRoomId(seRoomIdByRoomName(room_name));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (weekNumber !== null) {\r\n            getRoomData({ id: id, setResponse: setResponse, setLoading: setLoading, roomId: roomId, weekNumber, weekNumber });\r\n        }\r\n\r\n    }, [weekNumber,isSentBook]);\r\n\r\n\r\n    /*============================ HANDLE FUNCTIONS /*============================*/\r\n    const handleArrowClick = (e) => {\r\n        if (e.target.id === 'arrowLeft') {\r\n            const prevNumber = weekNumber - 1;\r\n            if (prevNumber >= todaysWeekNumber) {\r\n                setWeekNumber(prevNumber);\r\n            }\r\n        }\r\n        if (e.target.id === 'arrowRight') {\r\n            const nextNumber = weekNumber + 1;\r\n            if (nextNumber <= maxWeekNumber) {\r\n                setWeekNumber(nextNumber)\r\n            }\r\n        }\r\n    }\r\n\r\n    /*============================ RENDER /*============================*/\r\n    return (\r\n        loading\r\n            ? <h1>Loading...</h1>\r\n            :\r\n            <Grid container justifyContent={'center'} alignItems={'center'} direction={'column'}>\r\n                <Typography variant={\"h4\"}>{readRoomName(room_name)}</Typography>\r\n\r\n                <Grid container alignItems={'center'} className={classes.weekWrapper}>\r\n                    <ArrowLeftIcon id={'arrowLeft'} className={classes.ArrowIcon} /* style={{display: weekNumber === todaysWeekNumber ? 'none':'block'}} */ onClick={handleArrowClick} />\r\n                    <Typography variant={\"h4\"}>{response.week}. {translate.week}</Typography>\r\n                    <ArrowRightIcon id={'arrowRight'} className={classes.ArrowIcon} onClick={handleArrowClick} />\r\n                </Grid>\r\n                <BookingContext.Provider\r\n                    value={{\r\n                        id,\r\n                        roomId,\r\n                        weekNumber,\r\n                        isSentBook,\r\n                        setIsSentBook\r\n                    }}\r\n                    \r\n                >\r\n                    <Grid>\r\n                        <BookingTable\r\n                            response={response}\r\n                            roomId={roomId}\r\n                            weekNumber={weekNumber}\r\n                        />\r\n                    </Grid>\r\n                </BookingContext.Provider>\r\n\r\n            </Grid>\r\n\r\n    );\r\n};\r\n\r\nexport default BookingPage;\r\n\r\n","import React from 'react';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <h1>MainPage</h1>\r\n    );\r\n};\r\nexport default MainPage;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>\r\n            NotFound\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RoomsPage = () => {\r\n\r\n    return (\r\n        <Grid container direction={'column'}>\r\n            <Grid><Link to={`/szobak/fogsagban`}>SZOBA 1</Link></Grid>\r\n            <Grid><Link to={`/szobak/szoba-2`}>SZOBA 2</Link></Grid>\r\n            <Grid><Link to={`/szobak/szoba-3`}>SZOBA 3</Link></Grid>\r\n        </Grid>\r\n        );\r\n};\r\n\r\nexport default RoomsPage;","import React from 'react';\r\nimport Nav from './Components/Header/NavMenu/Nav';\r\nimport BookingPage from './Components/Pages/BookingPage/BookingPage';\r\nimport { Route, Routes} from 'react-router-dom';\r\nimport MainPage from './Components/Pages/MainPage/MainPage';\r\nimport NotFound from './Components/Pages/NotFound/NotFound';\r\nimport RoomsPage from './Components/Pages/RoomsPage/RoomsPage';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Nav />\r\n      <Routes>\r\n        <Route path=\"/\" element={<MainPage/>} />\r\n        <Route path=\"/szobak\" element={<RoomsPage/>} />\r\n        <Route path=\"/szobak/:room_name\" element={<BookingPage/>} />\r\n        <Route element={NotFound} />\r\n      </Routes>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}