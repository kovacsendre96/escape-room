{"version":3,"sources":["GlobalHelpers/Lang/Lang.js","Components/Header/NavMenu/Nav.js","GlobalHelpers/Api/Api.js","Components/Pages/BookingPage/BookingFromFunctions.js","GlobalHelpers/GlobalFunctions.js","Components/Pages/BookingPage/BookingForm.js","GlobalHelpers/Api/ApiFunctions.js","Components/Pages/BookingPage/BookingModal.js","Components/Pages/BookingPage/CustomTableCell.js","Components/Pages/BookingPage/BookingTable.js","Components/Pages/BookingPage/BookingPage.js","Components/Pages/MainPage/Sections/AboutTheEscapeRoom.js","Components/Pages/MainPage/Sections/StartingSection.js","Components/Pages/MainPage/MainPage.js","Components/Pages/NotFound/NotFound.js","Components/Pages/RoomsPage/RoomsPage.js","Components/Header/Header.js","App.js","index.js"],"names":["translate","monday","tuesday","wednesday","thursday","friday","saturday","sunday","week","mainPage","rooms","booking","contact","fogsagban","name","email","phone","message","groupNumber","nameIsRequired","invalidEmail","invalidPhone","numberOfGroupIsRequired","useStyles","makeStyles","navWrapper","background","color","height","padding","margin","linkItem","cursor","textDecoration","Nav","classes","Grid","className","container","justifyContent","alignItems","item","to","api","axios","create","baseURL","clickedTimeData","Object","JSJoda","require","LocalDate","INPUT_TYPE","theme","form","display","flexDirection","width","input","formControl","spacing","minWidth","selectLabel","paddingLeft","button","BookingForm","handleClose","roomCapacity","ctx","useContext","BookingContext","useState","setGroupNumber","group_number","errors","setErrors","setName","setEmail","setPhone","setMessage","handleBlur","e","changeType","setFunction","targetValue","target","value","match","isInvalidForm","autoComplete","onSubmit","preventDefault","id","roomId","weekNumber","dayNumber","timeNumber","time","reserved","setIsSentBook","isSentBook","put","then","res","status","bookRoom","clickedDay","clickedTime","date","room","post","sendReservationsData","TextField","label","type","variant","helperText","required","inputProps","maxLength","error","Boolean","onBlur","onChange","FormControl","InputLabel","Select","labelId","event","menuItem","i","push","MenuItem","generateMenuItem","FormHelperText","fullWidth","multiline","rows","Button","disabled","modal","paper","backgroundColor","palette","border","boxShadow","shadows","BookingModal","openModal","setOpenModal","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","tableCell","free","CustomTableCell","response","index","rowIndex","isDisabledRoom","roomTime","roomDateFormat","dateCorrection","number","newNumber","Date","todayFormat","getFullYear","getMonth","getDate","getNumberOfDays","start","end","start_date","parse","end_date","ChronoUnit","DAYS","between","parseInt","getHours","isDisabledTime","dayTimes","TableCell","onClick","table","maxWidth","BookingTable","rowsArray","columns","days","map","data","dayName","day_name","times","createRow","TableRow","tableRow","day","drawRows","useEffect","TableContainer","Table","TableHead","column","Typography","TableBody","row","createContext","weekWrapper","ArrowIcon","fontSize","BookingPage","setResponse","loading","setLoading","setRoomId","todaysWeekNumber","currentWeekNumber","setWeekNumber","room_name","useParams","setRoomCapacity","setRoomIdByRoomName","fetchedResult","get","key","unshift","getRoomData","setState","getRoomCapacity","roomName","direction","prevNumber","nextNumber","Provider","AboutTheEscapeRoom","props","src","alt","Features","MainPage","Fragment","NotFound","RoomsPage","Header","href","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d786c7b.chunk.js","sourcesContent":["\r\n\r\n    const lang = \"hu\";\r\nexport const translate =  {\r\n            monday:lang === \"hu\"? \"Hétfő\":\"Monday\",\r\n            tuesday:lang === \"hu\"? \"Kedd\":\"Tuesday\",\r\n            wednesday:lang === \"hu\"? \"Szerda\":\"Wednesday\",\r\n            thursday:lang === \"hu\"? \"Csütrötök\":\"Thursday\",  \r\n            friday:lang === \"hu\"? \"Péntek\":\"Friday\",\r\n            saturday:lang === \"hu\"? \"Szombat\":\"Saturday\",\r\n            sunday:lang === \"hu\"? \"Vasárnap\":\"Sunday\",\r\n            week:lang === \"hu\"? \"Hét\":\"Week\",\r\n            mainPage: lang === \"hu\"? \"Főoldal\" : \"Main page\",\r\n            rooms : lang === \"hu\"? \"Szobák\" : \"Rooms\",\r\n            booking : lang === \"hu\"? \"Foglalás\" : \"Booking\",\r\n            contact : lang === \"hu\"? \"Kapcsolat\": \"Contact\",\r\n            fogsagban: lang === \"hu\"? \"Fogságban\" : \"Captivity\",\r\n            \"szoba-2\": lang === \"hu\"? \"Szoba 2\" : \"Room 2\",\r\n            \"szoba-3\": lang === \"hu\"? \"Szoba 3\" : \"Room 3\",\r\n            name: lang === \"hu\"? \"Teljes név\" : \"Full name\",\r\n            email: lang === \"hu\"? \"Email cím\" : \"Email\",\r\n            phone: lang === \"hu\"? \"Telefonszám\" : \"Phone number\",\r\n            message: lang === \"hu\"? \"Megjegyzés\" : \"Message\",\r\n            groupNumber: lang === \"hu\"? \"Létszám\" : \"Group number\",\r\n            nameIsRequired: lang === \"hu\"? \"Név kitöltése kötelező\" : \"Name is required\",\r\n            invalidEmail: lang === \"hu\"? \"Hibás e-mail\" : \"Invalid  email\",\r\n            invalidPhone: lang === \"hu\"? \"Hibás telefonszám\" : \"Wrong phone number\",\r\n            numberOfGroupIsRequired: lang === \"hu\"? \"Létszám megadása kötelező\" : \"Number of group is required\",\r\n\r\n}\r\n","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { translate } from '../../../GlobalHelpers/Lang/Lang';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    navWrapper: {\r\n        background: 'black',\r\n        color: 'white',\r\n        height: 60,\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    linkItem: {\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n        textDecoration:'none'\r\n    }\r\n\r\n});\r\n\r\nconst Nav = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid className={classes.navWrapper} container justifyContent={\"space-around\"} alignItems={\"center\"}>\r\n            <Grid  item><Link className={classes.linkItem} to=\"escape-room/\">{translate.mainPage}</Link></Grid>\r\n            <Grid  item><Link className={classes.linkItem} to=\"escape-room/szobak\">{translate.rooms}</Link></Grid>\r\n            <Grid  item> <Link className={classes.linkItem} to=\"escape-room/foglalas\"> {translate.booking} </Link> </Grid>\r\n            <Grid  item> <Link className={classes.linkItem} to=\"escape-room/kapcsolat\"> {translate.contact} </Link> </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Nav;","import axios from 'axios';\r\n\r\n const  api = axios.create(\r\n    {\r\n      baseURL: \"https://booking-database-aa483-default-rtdb.europe-west1.firebasedatabase.app/\",\r\n    }\r\n  );\r\n  export default api;","export let clickedTimeData = Object;","import currentWeekNumber from \"current-week-number\";\r\nimport { translate } from \"./Lang/Lang\";\r\nconst JSJoda = require('js-joda');\r\nconst LocalDate = JSJoda.LocalDate;\r\n\r\nexport const readRoomName = (roomName) => {\r\n    return translate[roomName];\r\n};\r\n\r\nexport const setRoomIdByRoomName = (room_name) => {\r\n    let roomId;\r\n    switch (room_name) {\r\n        case 'fogsagban': roomId = '-Mp1W6hGMvV79dDM-K8U';\r\n            break;\r\n        case 'szoba-2': roomId = '-Mp1WBHtwPG0NRkGTONd';\r\n            break;\r\n        case 'szoba-3': roomId = '-Mp1WF1YL7dOnZUkm24h';\r\n            break;\r\n        default:\r\n            roomId = '';\r\n    }\r\n    return (\r\n        roomId\r\n    );\r\n};\r\n\r\nexport const isReservedTime = (time) => {\r\n    return time;\r\n};\r\n\r\nexport const INPUT_TYPE = {\r\n    NAME: \"name\",\r\n    EMAIL: \"email\",\r\n    PHONE: \"phone\",\r\n    MESSAGE: \"message\",\r\n    GROUP_NUMBER: \"group_number\"\r\n};\r\n\r\nexport const getCurrentWeekNumber = () => {\r\n    return currentWeekNumber() - 1;\r\n};\r\n\r\n\r\nexport const isDisabledTime = (roomTime, roomDateFormat) => {\r\n    function dateCorrection(number) {\r\n        let newNumber = number;\r\n        if (newNumber < 10) {\r\n            newNumber = `0${newNumber}`\r\n        }\r\n        return newNumber;\r\n    };\r\n    const date = new Date();\r\n\r\n    const todayFormat = `${date.getFullYear()}-${dateCorrection(date.getMonth() + 1)}-${dateCorrection(date.getDate())}`;\r\n    function getNumberOfDays(start, end) {\r\n        const start_date = new LocalDate.parse(start);\r\n        const end_date = new LocalDate.parse(end);\r\n\r\n        return JSJoda.ChronoUnit.DAYS.between(start_date, end_date);\r\n    };\r\n    if (getNumberOfDays(todayFormat, roomDateFormat) < 0) {\r\n        return true;\r\n    }\r\n    else if (getNumberOfDays(todayFormat, roomDateFormat) === 0 && parseInt(roomTime) <= date.getHours()) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n};\r\n","import { Button, FormHelperText, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { translate } from \"../../../GlobalHelpers/Lang/Lang\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { BookingContext } from \"./BookingPage\";\r\nimport { bookRoom, sendReservationsData } from \"../../../GlobalHelpers/Api/ApiFunctions\";\r\nimport { clickedTimeData } from \"./BookingFromFunctions\";\r\nimport { INPUT_TYPE } from \"../../../GlobalHelpers/GlobalFunctions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 500,\r\n\r\n    },\r\n    input: {\r\n        margin: 5,\r\n\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectLabel: {\r\n        paddingLeft: 10\r\n    },\r\n    message: {\r\n        '& .MuiInputBase-formControl': {\r\n            height: 150,\r\n            display: 'flex',\r\n            alignItems: 'flex-start',\r\n        }\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst BookingForm = ({ handleClose,roomCapacity }) => {\r\n    const classes = useStyles();\r\n    const ctx = useContext(BookingContext);\r\n    const [groupNumber, setGroupNumber] = useState('');\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        group_number: ''\r\n    });\r\n    const [name, setName] = useState(null);\r\n    const [email, setEmail] = useState(null);\r\n    const [phone, setPhone] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const handleBlur = (e, changeType, setFunction) => {    \r\n        const targetValue = e.target.value;\r\n        setFunction(targetValue);\r\n\r\n        if (changeType === INPUT_TYPE.NAME && targetValue === \"\") {\r\n            setErrors({\r\n                ...errors,\r\n                [changeType]: translate.nameIsRequired\r\n            })\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                [changeType]: ''\r\n            })\r\n        }\r\n        if (changeType === INPUT_TYPE.EMAIL) {\r\n            const mailformat = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            if (targetValue.match(mailformat)) {\r\n\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: ''\r\n                })\r\n            } else {\r\n\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: translate.invalidEmail\r\n                })\r\n            }\r\n        }\r\n        if (changeType === INPUT_TYPE.PHONE) {\r\n            const phoneFormat = /^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im\r\n            if (targetValue.match(phoneFormat)) {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: ''\r\n                })\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: translate.invalidPhone\r\n                })\r\n            }\r\n        }\r\n\r\n        if (changeType === INPUT_TYPE.GROUP_NUMBER) {\r\n            if (targetValue === '') {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: translate.numberOfGroupIsRequired\r\n                })\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    [changeType]: ''\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectChange = (event) => {\r\n        setGroupNumber(event.target.value);\r\n    };\r\n\r\n    const generateMenuItem = () => {\r\n        const menuItem = [];\r\n        for (let i = 1; i < roomCapacity+1; i++) {\r\n            menuItem.push(\r\n                <MenuItem key={i} value={i}>{i}</MenuItem>\r\n            );\r\n        }\r\n        return menuItem;\r\n    };\r\n\r\n    const isInvalidForm = () => {\r\n        return errors.name !== \"\" || errors.email !== \"\" || errors.phone !== \"\" || errors.group_number !== \"\";\r\n    };\r\n\r\n\r\n\r\n    const submitBook = (e) => {\r\n        if (!isInvalidForm()) {\r\n            e.preventDefault();\r\n            const sendData = {\r\n                id: ctx.id,\r\n                roomId: ctx.roomId,\r\n                weekNumber: ctx.weekNumber,\r\n                dayNumber: clickedTimeData.clickedDay,\r\n                timeNumber: clickedTimeData.clickedTime,\r\n                time: clickedTimeData.time,\r\n                reserved: true,\r\n                setIsSentBook: ctx.setIsSentBook,\r\n                isSentBook: ctx.isSentBook\r\n            }\r\n            bookRoom(sendData);\r\n            sendReservationsData({\r\n                name: name,\r\n                email: email,\r\n                phone: phone,\r\n                message: message,\r\n                groupNumber: groupNumber,\r\n                date: clickedTimeData.date,\r\n                time: clickedTimeData.time,\r\n                room: clickedTimeData.roomId,\r\n                id: ctx.id\r\n            })\r\n            handleClose();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form autoComplete=\"off\" className={classes.form} onSubmit={submitBook}>\r\n            <TextField\r\n                id=\"name\"\r\n                key=\"name\"\r\n                label={translate.name}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                helperText={errors?.name}\r\n                required\r\n                inputProps={\r\n                    { maxLength: 255 }\r\n                }\r\n                error={Boolean(errors?.name)}\r\n                onBlur={(e) => handleBlur(e, INPUT_TYPE.NAME, setName,)}\r\n                onChange={(e) => handleBlur(e, INPUT_TYPE.NAME, setName,)}\r\n            />\r\n            <TextField\r\n                id=\"email\"\r\n                key=\"email\"\r\n                label={translate.email}\r\n                type=\"email\"\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                autoComplete=\"new-email\"\r\n                required\r\n                error={errors?.email !== ''}\r\n                helperText={errors?.email}\r\n                onBlur={(e) => handleBlur(e, INPUT_TYPE.EMAIL, setEmail,)}\r\n                onChange={(e) => handleBlur(e, INPUT_TYPE.EMAIL, setName,)}\r\n\r\n            />\r\n            <TextField\r\n                id=\"phone\"\r\n                key=\"phone\"\r\n                label={translate.phone}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                className={classes.input}\r\n                autoComplete=\"new-phone\"\r\n                required\r\n                error={errors?.phone !== ''}\r\n                helperText={errors?.phone}\r\n                onBlur={(e) => handleBlur(e, INPUT_TYPE.PHONE, setPhone,)}\r\n                onChange={(e) => handleBlur(e, INPUT_TYPE.PHONE, setName,)}\r\n\r\n            />\r\n            <FormControl required variant=\"outlined\" className={classes.formControl} key=\"form-control\" error={errors?.group_number !== ''}>\r\n                <InputLabel id=\"group-number\" key=\"group-number\">{translate.groupNumber}</InputLabel>\r\n                <Select\r\n                    labelId=\"group-number\"\r\n                    label={translate.groupNumber}\r\n                    id=\"group-number-select\"\r\n                    key=\"group-number-select\"\r\n                    value={groupNumber}\r\n                    onChange={handleSelectChange}\r\n                    onBlur={(e) => handleBlur(e, INPUT_TYPE.GROUP_NUMBER, setGroupNumber,)}\r\n\r\n                >\r\n                    {generateMenuItem()}\r\n\r\n                </Select>\r\n                <FormHelperText>{errors?.group_number} </FormHelperText>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl fullWidth variant=\"outlined\"  className={classes.input}>\r\n                <TextField\r\n                    id=\"message\"\r\n                    key=\"message\"\r\n                    label={translate.message}\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    className={`${classes.input} ${classes.message}`}\r\n                    autoComplete=\"new-message\"\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    multiline\r\n                    rows={5}\r\n                />\r\n            </FormControl>\r\n\r\n            <Button disabled={isInvalidForm()} key={\"button\"} type={\"submit\"} variant=\"contained\" color=\"primary\" className={`${classes.button} ${classes.input}`}>\r\n                {translate.booking}\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default BookingForm;\r\n","import api from \"./Api\";\r\n\r\nexport const getRoomData = ({ id, setResponse, setLoading, roomId, weekNumber }) => {\r\n    const fetchedResult = [];\r\n    const response = api.get(`/users/${id}/rooms/${roomId}/weeks/${weekNumber}.json`).then((res) => {\r\n        for (let key in res.data) {\r\n            fetchedResult.unshift({\r\n                ...res.data[key],\r\n                id: key\r\n            });\r\n        };\r\n        setResponse(res.data);\r\n        setLoading(false);\r\n    });\r\n    return response;\r\n};\r\n\r\nexport const getRoomCapacity = ({id, setState, roomId}) => {\r\n    const response = api.get(`/users/${id}/rooms/${roomId}/capacity.json`).then((res) => {\r\n        setState(res.data);\r\n    });\r\n    return response;\r\n};\r\n\r\nexport const bookRoom = ({ id, roomId, weekNumber, dayNumber, timeNumber, time, reserved, setIsSentBook, isSentBook }) => {\r\n    api.put(`/users/${id}/rooms/${roomId}/weeks/${weekNumber}/days/${dayNumber}/times/${timeNumber}.json`, { time: time, reserved: reserved }).then((res) => {\r\n        if (res.status === 200) {\r\n            setIsSentBook(!isSentBook);\r\n        }\r\n    }\r\n    );\r\n};\r\n\r\nexport const sendReservationsData = ({ name, phone, email, message, groupNumber, date, time, room, id }) => {\r\n    api.post(`/users/${id}/reservations/.json`, { \"Név\": name, \"Telefonszám\": phone, \"Email\": email, \"Megjegyzés\": message, \"Létszám:\": groupNumber, \"Dátum\": date, \"Óra\": time, \"Szoba\": room }).then((res) => { }\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport BookingForm from './BookingForm';\r\nimport { Grid } from '@material-ui/core';\r\nimport { clickedTimeData } from './BookingFromFunctions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst BookingModal = ({ openModal, setOpenModal, roomCapacity }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n  return (\r\n\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={openModal}>\r\n        <div className={classes.paper}>\r\n          <Grid container justifyContent='center' alignItems='center'>{clickedTimeData.date}</Grid>\r\n          <BookingForm\r\n            handleClose={handleClose}\r\n            roomCapacity={roomCapacity}\r\n          />\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n}\r\nexport default BookingModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { isDisabledTime, isReservedTime } from '../../../GlobalHelpers/GlobalFunctions';\r\nimport { clickedTimeData } from './BookingFromFunctions';\r\n\r\nconst useStyles = makeStyles({\r\n    tableCell: {\r\n        border: '2px solid white',\r\n        padding: 20\r\n    },\r\n    reserved: {\r\n        cursor: \"not-allowed\",\r\n        background: 'red'\r\n    },\r\n    free: {\r\n        cursor: 'pointer',\r\n        background: '#90EE90'\r\n    },\r\n});\r\n\r\nconst CustomTableCell = ({ response,index,setOpenModal,rowIndex,roomId }) => {\r\n    const classes = useStyles();\r\n    const isDisabledRoom = isDisabledTime(response.dayTimes[index].time,response.date);\r\n    const handleClick = () => {\r\n        if (!isReservedTime(response.dayTimes[index].reserved || isDisabledRoom)){\r\n            setOpenModal(true);\r\n            clickedTimeData.clickedDay = rowIndex;\r\n            clickedTimeData.clickedTime = index;\r\n            clickedTimeData.time = response.dayTimes[index].time;\r\n            clickedTimeData.date = response.date;\r\n            clickedTimeData.roomId = roomId;\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n            <TableCell\r\n                onClick={handleClick}\r\n                key={`table-body-cell-${response.date}`}\r\n                className={`${classes.tableCell} ${response.dayTimes[index].reserved || isDisabledRoom ? classes.reserved : classes.free}`}\r\n            >\r\n                {response.dayTimes[index].time}\r\n            </TableCell>\r\n    \r\n    );\r\n}\r\n\r\nexport default CustomTableCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { translate } from '../../../GlobalHelpers/Lang/Lang';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport BookingModal from './BookingModal';\r\nimport CustomTableCell from './CustomTableCell';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        maxWidth: 700,\r\n    }\r\n});\r\nconst BookingTable = ({ response,roomId,roomCapacity }) => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const classes = useStyles();\r\n    const rowsArray = [];\r\n    const columns = [\r\n        translate.monday,\r\n        translate.tuesday,\r\n        translate.wednesday,\r\n        translate.thursday,\r\n        translate.friday,\r\n        translate.saturday,\r\n        translate.sunday\r\n    ];\r\n\r\n\r\n\r\n    function createData(date, dayName, dayTimes) {\r\n        return { date, dayName, dayTimes };\r\n    }\r\n\r\n    const rows = response.days.map(data =>\r\n        createData(\r\n            data.date,\r\n            data.day_name,\r\n            data.times.map(time => time)\r\n        )\r\n    )\r\n\r\n    const createRow = (index) => {\r\n        return (\r\n            <TableRow key={index} className={classes.tableRow}>\r\n                {\r\n                    rows.map((day,rowIndex) => (\r\n                        <CustomTableCell\r\n                            response={day}\r\n                            index={index}\r\n                            setOpenModal={setOpenModal}\r\n                            rowIndex={rowIndex}\r\n                            key={rowIndex}\r\n                            roomId={roomId}\r\n                        />\r\n                    ))}\r\n            </TableRow>\r\n        );\r\n    }\r\n\r\n    const drawRows = () => {\r\n        for (let i = 0; i < 6; i++) {\r\n            rowsArray.push(createRow(i))\r\n        }\r\n    }\r\n    drawRows();\r\n    useEffect(() => {\r\n    }, [response])\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <BookingModal\r\n                    openModal={openModal}\r\n                    setOpenModal={setOpenModal}\r\n                    response={response}\r\n                    roomCapacity={roomCapacity}\r\n                />\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {columns.map((column, index) => (\r\n                            <TableCell key={`table-head-${index}`}>\r\n                                <Grid key={`table-head-cell${index}`}>{column}</Grid>\r\n                                <Typography key={`table-head-date${index}`} variant={\"caption\"}>{response.days[index].date}</Typography>\r\n                            </TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rowsArray.map(row => row)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default BookingTable;","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { getRoomCapacity, getRoomData } from \"../../../GlobalHelpers/Api/ApiFunctions\";\r\nimport BookingTable from \"./BookingTable\";\r\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { translate } from \"../../../GlobalHelpers/Lang/Lang\";\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport { useParams } from \"react-router\";\r\nimport { getCurrentWeekNumber, readRoomName, setRoomIdByRoomName } from \"../../../GlobalHelpers/GlobalFunctions\";\r\n\r\n\r\n\r\n\r\nexport const BookingContext = createContext();\r\nconst useStyles = makeStyles({\r\n    weekWrapper: {\r\n        width: 'auto',\r\n        padding: 20,\r\n    },\r\n    ArrowIcon: {\r\n        cursor: 'pointer',\r\n        padding: 10,\r\n        fontSize: 50,\r\n    }\r\n});\r\nconst BookingPage = () => {\r\n    /*============================ USE STATES /*============================*/\r\n    const [response, setResponse] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [roomId, setRoomId] = useState(null);\r\n    const [isSentBook, setIsSentBook] = useState(false);\r\n    const todaysWeekNumber = getCurrentWeekNumber();\r\n    const maxWeekNumber = 51;\r\n    const [weekNumber, setWeekNumber] = useState(null);\r\n    const classes = useStyles();\r\n    const { room_name } = useParams();\r\n    const id = '-MoUTkg1gdkGpPFivBxy';\r\n    const [roomCapacity, setRoomCapacity] = useState();\r\n\r\n    /*============================ USE EFFECTS /*============================*/\r\n    useEffect(() => {\r\n        setWeekNumber(todaysWeekNumber);\r\n        setRoomId(setRoomIdByRoomName(room_name));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (weekNumber !== null) {\r\n            getRoomData({ id: id, setResponse: setResponse, setLoading: setLoading, roomId: roomId, weekNumber: weekNumber });\r\n        }\r\n\r\n    }, [weekNumber, isSentBook]);\r\n\r\n    useEffect(() => {\r\n        getRoomCapacity({ id: id, setState: setRoomCapacity, roomId: roomId });\r\n    }, [loading]);\r\n\r\n    /*============================ HANDLE FUNCTIONS /*============================*/\r\n    const handleArrowLeftClick = () => {\r\n        const prevNumber = weekNumber - 1;\r\n        if (prevNumber >= todaysWeekNumber) {\r\n            setWeekNumber(prevNumber);\r\n        }\r\n    };\r\n\r\n    const handleArrowRightClick = () => {\r\n        const nextNumber = weekNumber + 1;\r\n        if (nextNumber <= maxWeekNumber) {\r\n            setWeekNumber(nextNumber)\r\n        }\r\n    };\r\n\r\n\r\n    /*============================ RENDER /*============================*/\r\n    return (\r\n        loading\r\n            ? <h1>Loading...</h1>\r\n            :\r\n            <Grid container justifyContent={'center'} alignItems={'center'} direction={'column'}>\r\n                <Typography variant={\"h4\"}>{readRoomName(room_name)}</Typography>\r\n\r\n                <Grid container alignItems={'center'} className={classes.weekWrapper}>\r\n                    <ArrowLeftIcon id={'arrowLeft'} className={classes.ArrowIcon} onClick={handleArrowLeftClick} />\r\n                    <Typography variant={\"h4\"}>{response.week}. {translate.week}</Typography>\r\n                    <ArrowRightIcon id={'arrowRight'} className={classes.ArrowIcon} onClick={handleArrowRightClick} />\r\n                </Grid>\r\n                <BookingContext.Provider\r\n                    value={{\r\n                        id,\r\n                        roomId,\r\n                        weekNumber,\r\n                        isSentBook,\r\n                        setIsSentBook\r\n                    }}\r\n\r\n                >\r\n                    <Grid>\r\n                        <BookingTable\r\n                            response={response}\r\n                            roomId={roomId}\r\n                            weekNumber={weekNumber}\r\n                            roomCapacity={roomCapacity}\r\n                        />\r\n                    </Grid>\r\n                </BookingContext.Provider>\r\n\r\n            </Grid>\r\n\r\n    );\r\n};\r\n\r\nexport default BookingPage;\r\n\r\n","const AboutTheEscapeRoom = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"img/about.jpg\" className=\"img-responsive\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>Szabaduló szobáról</h2>\n              <h3>Why Choose Us?</h3>\n              \n           \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutTheEscapeRoom;\n","const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <p>Old meg te is csapatoddal Szentes legújabb szabaduló szobáinak rejtélyeit. Zökkenj ki a hétköznapokból, és add át magad szobáink világának. Gyertek el csapatban, párban és nézzetek szembe a kihívásokkal.</p>\n        <p> Ha egy jó összeszokott társaság vagytok, akik a fejüket összedugva minden feladatot meg tud oldani, akkor ezt nektek ajánljuk.</p>\n        <p>Ha pedig az a cél, hogy jobban összekovácsolódjatok, a CodeLabor remek alkalmat biztosít erre.</p>\n        <p>Nézd meg a szobáinkat, és foglalj szabad időpontjainkból!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Features;\n","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport AboutTheEscapeRoom from './Sections/AboutTheEscapeRoom';\r\nimport StarterSection from './Sections/StartingSection';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    \r\n}));\r\nconst MainPage = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <StarterSection />\r\n            <AboutTheEscapeRoom />\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default MainPage;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>\r\n            NotFound\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RoomsPage = () => {\r\n\r\n    return (\r\n        <Grid container direction={'column'}>\r\n            <Grid><Link to={`/escape-room/szobak/fogsagban`}>SZOBA 1</Link></Grid>\r\n            <Grid><Link to={`/escape-room/szobak/szoba-2`}>SZOBA 2</Link></Grid>\r\n            <Grid><Link to={`/escape-room/szobak/szoba-3`}>SZOBA 3</Link></Grid>\r\n        </Grid>\r\n        );\r\n};\r\n\r\nexport default RoomsPage;","import React from \"react\";\r\n\r\n const Header = () => {\r\n    return (\r\n      <header id='header'>\r\n        <div className='intro'>\r\n          <div className='overlay'>\r\n            <div className='container'>\r\n              <div className='row'>\r\n                <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                  <h1>\r\n                   Code\r\n                    <span>Labor</span>\r\n                  </h1>\r\n                  <p>Kiszabadítunk az unalomból</p>\r\n                  <a\r\n                    href='#features'\r\n                    className='btn btn-custom btn-lg page-scroll'\r\n                  >\r\n                    Foglalás\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  };\r\n  export default Header;\r\n  ","import React from 'react';\r\nimport Nav from './Components/Header/NavMenu/Nav';\r\nimport BookingPage from './Components/Pages/BookingPage/BookingPage';\r\nimport { Route, Routes} from 'react-router-dom';\r\nimport MainPage from './Components/Pages/MainPage/MainPage';\r\nimport NotFound from './Components/Pages/NotFound/NotFound';\r\nimport RoomsPage from './Components/Pages/RoomsPage/RoomsPage';\r\nimport Header from './Components/Header/Header';\r\nimport \"./public/css/App.css\";\r\nimport \"./public/css/style.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Nav />\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/escape-room/\" element={<MainPage/>} />\r\n        <Route path=\"/escape-room/szobak\" element={<RoomsPage/>} />\r\n        <Route path=\"/escape-room/szobak/:room_name\" element={<BookingPage/>} />\r\n        <Route element={NotFound} />\r\n      </Routes>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}